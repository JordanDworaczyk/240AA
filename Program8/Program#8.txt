; Jordan Dworaczyk
; CSSC240AA - Program #8 (Scheme)
; Due Monday, March 6 (last day to turn in March 20)
; Define Scheme functions for each of the following. (You may assume that)
; the inputs are valid lists, and not atoms, and that each element of the list
; is a number. You must make sure that the functions work for the lists of any
; size, including the empty list with no elements.)

; (a) Given two lists of numbers (of the same length), return the dot-product.

(define (dot-product Lst1 Lst2)
  (if (null? Lst1)
    0
    (if (null? Lst2)
      0
      (+ (dot-product (cdr Lst1) (cdr Lst2) ) (* (car Lst1) (car Lst2)) )
    )
  )
)

(define Lst1 '(1 3 -5))
(define Lst2 '(4 -2 -1))
(dot-product Lst1 Lst2)


; (b) Given a list of numbers, return whether or not (#t or #f) the list
; contains any duplicate entries (two or more elements of the same value).


; (c) Given two lists of numbers (of the same length), return the largest
; difference between corresponding pairs of numbers (without creating another
; list).
